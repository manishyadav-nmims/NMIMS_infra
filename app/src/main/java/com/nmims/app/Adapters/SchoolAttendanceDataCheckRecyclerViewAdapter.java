package com.nmims.app.Adapters;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TableRow;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.nmims.app.Helpers.MyLog;import com.nmims.app.Helpers.DBHelper;import com.nmims.app.Helpers.NMIMSApplication;import com.nmims.app.Models.SchoolAttendanceDataModel;import com.nmims.app.R;import java.util.List;public class SchoolAttendanceDataCheckRecyclerViewAdapter extends RecyclerView.Adapter<SchoolAttendanceDataCheckRecyclerViewAdapter.MyViewHolder>{    private Context context;    private List<SchoolAttendanceDataModel> schoolAttendanceDataCheckList;    private OpenDateForAdmin openDateForAdmin;    public SchoolAttendanceDataCheckRecyclerViewAdapter(Context context, List<SchoolAttendanceDataModel> schoolAttendanceDataCheckList, OpenDateForAdmin openDateForAdmin) {        this.context = context;        this.schoolAttendanceDataCheckList = schoolAttendanceDataCheckList;        this.openDateForAdmin = openDateForAdmin;    }    @Override    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType)    {        View itemView = LayoutInflater.from(parent.getContext())                .inflate(R.layout.all_schools_data_check_design, parent, false);        return new MyViewHolder(itemView, context, schoolAttendanceDataCheckList);    }    @Override    public void onBindViewHolder(@NonNull MyViewHolder holder, int position)    {        SchoolAttendanceDataModel schoolAttendanceDataCheck = schoolAttendanceDataCheckList.get(position);        holder.expand_sa.setText(schoolAttendanceDataCheck.getIsExpanded());        holder.schools_sa.setText(schoolAttendanceDataCheck.getSchoolName());        holder.selectDate_sa.setText(schoolAttendanceDataCheck.getDate());        if(schoolAttendanceDataCheck.getStatus().equals("not sent"))        {            holder.status_sa.setTextColor(context.getResources().getColor(R.color.colorPrimaryDark));            holder.status_sa.setText(schoolAttendanceDataCheck.getStatus());        }        else if(schoolAttendanceDataCheck.getStatus().equals("Check"))        {            holder.status_sa.setTextColor(context.getResources().getColor(R.color.colorBlack));            holder.status_sa.setText(schoolAttendanceDataCheck.getStatus());        }        else        {            holder.status_sa.setTextColor(context.getResources().getColor(R.color.colorGreen));            holder.status_sa.setText(schoolAttendanceDataCheck.getStatus());        }        holder.details_sa.setText(schoolAttendanceDataCheck.getEndTime());        if(schoolAttendanceDataCheck.getIsApiHit().equals("Y"))        {            if(schoolAttendanceDataCheck.getStatus().equals("not sent"))            {                holder.sa_row_details.setVisibility(View.VISIBLE);            }            else if(schoolAttendanceDataCheck.getStatus().equals("Not Marked"))            {                holder.sa_row_details.setVisibility(View.GONE);                holder.status_sa.setTextColor(context.getResources().getColor(R.color.colorBlue));            }            else            {                holder.sa_row_details.setVisibility(View.GONE);            }        }        else        {            holder.sa_row_details.setVisibility(View.GONE);        }    }    @Override    public int getItemCount() {        return schoolAttendanceDataCheckList.size();    }    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener    {        private TextView expand_sa, schools_sa, selectDate_sa, status_sa, details_sa;        private TableRow sa_row_details;        private Context context;        private List<SchoolAttendanceDataModel> schoolAttendanceDataCheckList;        private DBHelper dbHelper = new DBHelper(context);        public MyViewHolder(@NonNull View itemView, Context context, List<SchoolAttendanceDataModel> schoolAttendanceDataCheckList)        {            super(itemView);            this.context = context;            this.schoolAttendanceDataCheckList = schoolAttendanceDataCheckList;            expand_sa = itemView.findViewById(R.id.expand_sa);            schools_sa = itemView.findViewById(R.id.schools_sa);            selectDate_sa = itemView.findViewById(R.id.selectDate_sa);            status_sa = itemView.findViewById(R.id.status_sa);            details_sa = itemView.findViewById(R.id.details_sa);            sa_row_details = itemView.findViewById(R.id.sa_row_details);            itemView.setOnClickListener(this);            selectDate_sa.setOnClickListener(this);            expand_sa.setOnClickListener(this);            status_sa.setOnClickListener(this);        }        @Override        public void onClick(View v)        {            if(v.getId() == expand_sa.getId())            {                new MyLog(NMIMSApplication.getAppContext()).debug("Recy_school",schoolAttendanceDataCheckList.get(getAdapterPosition()).getSchoolName());                new MyLog(NMIMSApplication.getAppContext()).debug("Recy_status",schoolAttendanceDataCheckList.get(getAdapterPosition()).getStatus());                new MyLog(NMIMSApplication.getAppContext()).debug("Recy_apiHit",schoolAttendanceDataCheckList.get(getAdapterPosition()).getIsApiHit());                new MyLog(NMIMSApplication.getAppContext()).debug("Recy_expanded",schoolAttendanceDataCheckList.get(getAdapterPosition()).getIsExpanded());                new MyLog(NMIMSApplication.getAppContext()).debug("Recy_date",schoolAttendanceDataCheckList.get(getAdapterPosition()).getDate());                if(schoolAttendanceDataCheckList.get(getAdapterPosition()).getIsApiHit().equals("Y"))                {                    if(schoolAttendanceDataCheckList.get(getAdapterPosition()).equals("EXP"))                    {                        dbHelper.updateSchoolAttendanceDataIsExpanded("SHR",schoolAttendanceDataCheckList.get(getAdapterPosition()).getSchoolName());                        schoolAttendanceDataCheckList.get(getAdapterPosition()).setIsExpanded("SHR");                        notifyDataSetChanged();                    }                    else                    {                        dbHelper.updateSchoolAttendanceDataIsExpanded("EXP",schoolAttendanceDataCheckList.get(getAdapterPosition()).getSchoolName());                        schoolAttendanceDataCheckList.get(getAdapterPosition()).setIsExpanded("EXP");                        notifyDataSetChanged();                    }                }                else                {                    Toast.makeText(context,"Kindly check the status first",Toast.LENGTH_SHORT).show();                }            }            if(v.getId() == selectDate_sa.getId())            {                new MyLog(NMIMSApplication.getAppContext()).debug("selectDate_sa ","selectDate_saPRESSED");                openDateForAdmin.openDateForSupportAdmin(getAdapterPosition());            }            if(v.getId() == status_sa.getId())            {                new MyLog(NMIMSApplication.getAppContext()).debug("status_sa" ,"status_saPRESSED");                openDateForAdmin.checkSchoolStatusForParticularSchool(schoolAttendanceDataCheckList.get(getAdapterPosition()).getSchoolName(), schoolAttendanceDataCheckList.get(getAdapterPosition()).getDate(), getAdapterPosition());            }        }    }    public interface OpenDateForAdmin    {        void openDateForSupportAdmin(int position);        void checkSchoolStatusForParticularSchool(String schoolName, String startTime, int position);    }}