package com.nmims.app.Adapters;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.nmims.app.Models.InternalMarksDataModel;import com.nmims.app.R;import java.util.List;public class ViewInternalMarksRecyclerViewAdapter extends RecyclerView.Adapter<ViewInternalMarksRecyclerViewAdapter.MyViewHolder>{    private Context context;    private List<InternalMarksDataModel> internalMarksDataModelList;    private OpenICADetails openICADetails;    public ViewInternalMarksRecyclerViewAdapter(Context context, List<InternalMarksDataModel> internalMarksDataModelList, OpenICADetails openICADetails) {        this.context = context;        this.internalMarksDataModelList = internalMarksDataModelList;        this.openICADetails = openICADetails;    }    @Override    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType)    {        View itemView = LayoutInflater.from(parent.getContext())                .inflate(R.layout.internal_marks_design, parent, false);        return new MyViewHolder(itemView, context, internalMarksDataModelList);    }    @Override    public void onBindViewHolder(@NonNull MyViewHolder holder, int position)    {        InternalMarksDataModel internalMarksDataModel = internalMarksDataModelList.get(position);        holder.subjectTitle.setText(internalMarksDataModel.getModuleName());        holder.IM_marksObtainedValue.setText(":   "+internalMarksDataModel.getIcaTotalMarks());        holder.IM_statusValue.setText(":   "+internalMarksDataModel.getPassFailStatus());        if(internalMarksDataModel.getPassFailStatus().equalsIgnoreCase("FAIL"))        {            holder.IM_statusValue.setTextColor(context.getResources().getColor(R.color.colorPrimaryDark));        }        else        {            holder.IM_statusValue.setTextColor(context.getResources().getColor(R.color.colorGreen));        }    }    @Override    public int getItemCount() {        return internalMarksDataModelList.size();    }    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener    {        private TextView subjectTitle, IM_marksObtainedValue, IM_statusValue;        private Context context;        private List<InternalMarksDataModel> internalMarksDataModelList;        public MyViewHolder(@NonNull View itemView, Context context, List<InternalMarksDataModel> internalMarksDataModelList)        {            super(itemView);            this.context = context;            this.internalMarksDataModelList = internalMarksDataModelList;            subjectTitle = itemView.findViewById(R.id.subjectTitle);            IM_marksObtainedValue = itemView.findViewById(R.id.IM_marksObtainedValue);            IM_statusValue = itemView.findViewById(R.id.IM_statusValue);            itemView.setOnClickListener(this);        }        @Override        public void onClick(View v)        {            openICADetails.openInternalMarksDetails(internalMarksDataModelList.get(getAdapterPosition()));        }    }    public interface OpenICADetails    {        void openInternalMarksDetails(InternalMarksDataModel internalMarksDataModel);    }}