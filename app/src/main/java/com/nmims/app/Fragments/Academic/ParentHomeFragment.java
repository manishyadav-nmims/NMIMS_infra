package com.nmims.app.Fragments.Academic;import android.database.Cursor;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentTransaction;import com.google.firebase.analytics.FirebaseAnalytics;import com.nmims.app.Activities.ParentDrawer;import com.nmims.app.Helpers.MyLog;import com.nmims.app.Helpers.DBHelper;import com.nmims.app.Helpers.NMIMSApplication;import com.nmims.app.R;public class ParentHomeFragment extends Fragment{    private ImageView icaMarksic, parentSupportic, changePasswordic, parentTimetableic, downloadsPic;    private TextView icaMarkstv, parentSupporttv, parentName, parentEmail, changePasswordtv, parentTimetabletv, parentUsername, downloadsPtv;    private DBHelper dbHelper;    private RelativeLayout fragment_ParentHomeFragment;    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)    {        View view = inflater.inflate(R.layout.fragment_parent_home, container, false);        ((ParentDrawer) getActivity()).setActionBarTitle("NMIMS");        icaMarksic = view.findViewById(R.id.icaMarksic);        parentSupportic = view.findViewById(R.id.parentSupportic);        icaMarkstv = view.findViewById(R.id.icaMarkstv);        parentSupporttv = view.findViewById(R.id.parentSupporttv);        parentName = view.findViewById(R.id.parentName);        parentEmail = view.findViewById(R.id.parentEmail);        parentUsername = view.findViewById(R.id.parentUsername);        changePasswordic = view.findViewById(R.id.changePasswordic);        changePasswordtv = view.findViewById(R.id.changePasswordtv);        parentTimetableic = view.findViewById(R.id.parentTimetableic);        parentTimetabletv = view.findViewById(R.id.parentTimetabletv);        downloadsPic = view.findViewById(R.id.downloadsPic);        downloadsPtv = view.findViewById(R.id.downloadsPtv);        fragment_ParentHomeFragment = view.findViewById(R.id.fragment_ParentHomeFragment);        fragment_ParentHomeFragment.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                /////////////////Dont Delete            }        });        dbHelper = new DBHelper(getContext());        parentSupportic.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionSupport();            }        });        parentSupporttv.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionSupport();            }        });        icaMarkstv.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionICAMarks();            }        });        icaMarksic.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionICAMarks();            }        });        parentTimetableic.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionExamTimeTable();            }        });        parentTimetabletv.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionExamTimeTable();            }        });        changePasswordic.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionChangePassword();            }        });        changePasswordtv.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionChangePassword();            }        });        downloadsPic.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionDownloads();            }        });        downloadsPtv.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                actionDownloads();            }        });        loadHomePageData();        //////////ADDING FIREBASE EVENTS///////////////        FirebaseAnalytics mFirebaseAnalytics = FirebaseAnalytics.getInstance(getContext());        Bundle params = new Bundle();        params.putString("parent_home_fragment", "parent_home_fragment");        mFirebaseAnalytics.logEvent("Parent_Home_Fragment", params);        ///////////////////////////////////////////////        return view;    }    private void actionICAMarks()    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        ft.add(R.id.ParentHome, new ViewInternalMarksFragment());        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);        ft.addToBackStack("ICA Marks");        ft.commit();    }    private void actionSupport()    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        ft.add(R.id.ParentHome, new SupportFragment());        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);        ft.addToBackStack("Support");        ft.commit();    }    private void actionChangePassword()    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        ft.add(R.id.ParentHome, new Faculty_ParentChangePasswordFragment());        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);        ft.addToBackStack("Change Password");        ft.commit();    }    private void actionExamTimeTable()    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        ft.add(R.id.ParentHome, new ExamTimeTableFragment());        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);        ft.addToBackStack("Exam Timetable");        ft.commit();    }    private void actionDownloads()    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        ft.add(R.id.ParentHome, new DownloadFragment());        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);        ft.addToBackStack("Downloads");        ft.commit();    }    private void loadHomePageData()    {        try        {            Cursor cursor = dbHelper.getUserDataValues();            if (cursor!= null){                if(cursor.moveToFirst())                {                    new MyLog(NMIMSApplication.getAppContext()).debug("sapidP", cursor.getString(cursor.getColumnIndex("sapid")));                    new MyLog(NMIMSApplication.getAppContext()).debug("email", cursor.getString(cursor.getColumnIndex("emailId")));                    parentUsername.setText("SAP ID : "+cursor.getString(cursor.getColumnIndex("sapid")).trim());                    parentEmail.setText(cursor.getString(cursor.getColumnIndex("emailId")).trim());                    parentName.setText(cursor.getString(cursor.getColumnIndex("firstName"))+" "+cursor.getString(cursor.getColumnIndex("lastName")).trim());                }            }        }        catch (Exception e)        {            e.printStackTrace();            new MyLog(NMIMSApplication.getAppContext()).debug("ParentHomePageException",e.getMessage());        }    }}