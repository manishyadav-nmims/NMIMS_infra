/*package com.nmims.app.Activities;import android.os.Bundle;import com.google.android.youtube.player.YouTubeBaseActivity;import com.google.android.youtube.player.YouTubeInitializationResult;import com.google.android.youtube.player.YouTubePlayer;import com.google.android.youtube.player.YouTubePlayerView;import com.google.firebase.analytics.FirebaseAnalytics;import com.nmims.app.BuildConfig;import com.nmims.app.Helpers.CommonMethods;import com.nmims.app.Helpers.Config;import com.nmims.app.Helpers.MyToast;import com.nmims.app.R;public class OrientationActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener{    private static final int RECOVERY_REQUEST = 1;    private YouTubePlayerView youTubeView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_orientation);        CommonMethods.handleSSLHandshake();        //////////ADDING FIREBASE EVENTS///////////////        FirebaseAnalytics mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);        Bundle params = new Bundle();        params.putString("orientation_activity", "orientation_activity");        mFirebaseAnalytics.logEvent("Orientation_Activity", params);        ///////////////////////////////////////////////        youTubeView = findViewById(R.id.youtube_view);       // youTubeView.initialize(Config.API_KEY, this);        youTubeView.initialize(BuildConfig.API_KEY, this);    }    @Override    public void onInitializationSuccess(YouTubePlayer.Provider provider, YouTubePlayer player, boolean wasRestored) {        if (!wasRestored) {            player.cueVideo(Config.youtubeCode);        }    }    @Override    public void onInitializationFailure(YouTubePlayer.Provider provider, YouTubeInitializationResult errorReason) {        if (errorReason.isUserRecoverableError()) {            errorReason.getErrorDialog(this, RECOVERY_REQUEST).show();        } else {            String error = String.format(getString(R.string.player_error), errorReason.toString());            new MyToast(this).showSmallCustomToast(error);        }    }    @Override    public void onBackPressed() {        super.onBackPressed();        finish();    }}*/